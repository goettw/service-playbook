<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:mongo="http://www.springframework.org/schema/data/mongo"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd 
	http://www.springframework.org/schema/context  http://www.springframework.org/schema/context/spring-context-3.1.xsd
	http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
	http://www.springframework.org/schema/data/mongo http://www.springframework.org/schema/data/mongo/spring-mongo-1.0.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

	<context:component-scan base-package="serviceplaybook" />
	
	<!-- an HTTP Session-scoped bean exposed as a proxy -->
	<bean id="sessionContext" class="serviceplaybook.web.SessionContext"
		scope="session">
		<!-- instructs the container to proxy the surrounding bean -->
		<aop:scoped-proxy />
		<property name="serviceNavigator" ref="serviceNavigator" />
	</bean>
	<bean id="serviceNavigator" class="serviceplaybook.controller.ServiceNavigator" />
	<!-- Factory bean that creates the Mongo instance -->
	<bean id="mongo" class="org.springframework.data.mongodb.core.MongoFactoryBean">
		<property name="host" value="localhost" />
	</bean>
	<mongo:repositories base-package="serviceplaybook.mongorepo" />
	<!-- repoTemplate for connecting and quering the documents in the database -->
	<bean id="mongoTemplate" class="org.springframework.data.mongodb.core.MongoTemplate">
		<!-- constructor-arg name="mongo" ref="mongo" /> <constructor-arg name="databaseName" 
			value="test" / -->
		<constructor-arg ref="mongoDbFactory" />
	</bean>
	<bean id="gridFsTemplate" class="org.springframework.data.mongodb.gridfs.GridFsTemplate">
		<constructor-arg ref="mongoDbFactory" />
		<constructor-arg ref="mongoMappingConverter" />
	</bean>
	<bean id="mongoMappingConverter"
		class="org.springframework.data.mongodb.core.convert.MappingMongoConverter">
		<constructor-arg ref="mongoDbFactory" />
		<constructor-arg ref="mappingContext" />
	</bean>
	<bean id="mappingContext"
		class="org.springframework.data.mongodb.core.mapping.MongoMappingContext">
	</bean>

	<!--mongo:db-factory id="mongoDbFactory" dbname="test" host="192.168.232.156" 
		/ -->
	<mongo:db-factory id="mongoDbFactory" dbname="test"
		host="localhost" />

	<!-- Use this post processor to translate any MongoExceptions thrown in 
		@Repository annotated classes -->
	<bean
		class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />

	<!-- removed as Tiles have been added -->
	<!-- bean id="jspViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver" 
		p:prefix="/WEB-INF/jsp/" p:suffix=".jsp" / -->
	<!-- TILES -->
	<bean class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<!--Don't add suffix or prefix like you do with .jsp files -->
		<property name="viewClass"
			value="org.springframework.web.servlet.view.tiles2.TilesView" />
	</bean>

	<bean id="tilesConfigurer"
		class="org.springframework.web.servlet.view.tiles2.TilesConfigurer">
		<property name="definitions">
			<value>/WEB-INF/tiles.xml</value>
		</property>
	</bean>

	<mvc:resources mapping="/css/**" location="/WEB-INF/css/*" />
	<mvc:resources mapping="/images/**" location="/WEB-INF/images/*" />
	<mvc:resources mapping="/js/**" location="/WEB-INF/js/*" />
	<mvc:resources mapping="/bootstrap/**" location="/WEB-INF/bootstrap/*" />
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver" />
	<mvc:annotation-driven></mvc:annotation-driven>

</beans>